{"version":3,"sources":["webpack:///0.d5477476ba80de7df62b.chunk.js","webpack:///./src/app/loginlogout/loginlogout.module.ts","webpack:///./src/app/loginlogout/loginlogout.component.ts","webpack:///./src/app/loginlogout/loginlogout.service.ts","webpack:///./src/app/loginlogout/loginlogout.routing.ts","webpack:///./src/app/shared/utils/genericvalidator.ts","webpack:///./src/app/loginlogout/loginlogout.component.scss","webpack:///./src/app/loginlogout/loginlogout.component.html","webpack:///./~/rxjs/Scheduler.js","webpack:///./~/rxjs/add/observable/merge.js","webpack:///./~/rxjs/add/operator/debounceTime.js","webpack:///./~/rxjs/observable/merge.js","webpack:///./~/rxjs/operator/debounceTime.js","webpack:///./~/rxjs/operator/merge.js","webpack:///./~/rxjs/scheduler/Action.js","webpack:///./~/rxjs/scheduler/AsyncAction.js","webpack:///./~/rxjs/scheduler/AsyncScheduler.js","webpack:///./~/rxjs/scheduler/async.js"],"names":["webpackJsonp","847","module","exports","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__angular_common__","__WEBPACK_IMPORTED_MODULE_2__angular_forms__","__WEBPACK_IMPORTED_MODULE_3__angular_material__","__WEBPACK_IMPORTED_MODULE_4__loginlogout_component__","__WEBPACK_IMPORTED_MODULE_5__loginlogout_routing__","__WEBPACK_IMPORTED_MODULE_6__shared_shared_module__","__WEBPACK_IMPORTED_MODULE_7__loginlogout_service__","d","LoginlogoutModule","__decorate","this","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","imports","forRoot","declarations","providers","853","__WEBPACK_IMPORTED_MODULE_1__angular_router__","__WEBPACK_IMPORTED_MODULE_3__angular_platform_browser__","__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_debounceTime__","__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromEvent__","n","__WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_merge__","__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_8__shared_utils_genericvalidator__","__WEBPACK_IMPORTED_MODULE_9__loginlogout_service__","LoginlogoutComponent","fb","router","titleService","loginService","displayMessage","setTitle","validationMessages","loginName","required","minlength","maxlength","loginPassword","prototype","ngOnInit","loginFrom","group","minLength","maxLength","genericValidator","ngAfterViewInit","_this","controlBlurs","formInputElements","map","formControl","fromEvent","nativeElement","merge","apply","valueChanges","concat","debounceTime","subscribe","value","processMessages","ngOnDestroy","onLogin","p","assign","data","login","navigate","error","errorMessage","onCancel","read","Array","selector","template","styles","_a","_b","_c","_d","854","__WEBPACK_IMPORTED_MODULE_1__angular_http__","__WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_do__","__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch__","__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_throw__","__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__","__WEBPACK_IMPORTED_MODULE_7_rxjs_add_observable_of__","LoginlogoutService","http","baseUrl","arg","headers","Content-Type","options","post","extractData","do","catch","handleError","response","status","throw","json","859","__WEBPACK_IMPORTED_MODULE_0__loginlogout_component__","LoginLogoutRoutes","routes","path","component","forChild","860","__WEBPACK_IMPORTED_MODULE_0__angular_forms__","Genericvalidator","container","messages","_loop_1","controlKey","controls","hasOwnProperty","childMessages","this_1","dirty","touched","errors","keys","messageKey","866","872","873","Scheduler","SchedulerAction","now","schedule","work","delay","state","Date","874","Observable_1","merge_1","Observable","875","debounceTime_1","876","mergeStatic","877","dueTime","scheduler","async_1","async","lift","DebounceTimeOperator","dispatchNext","subscriber","debouncedNext","__extends","b","__","constructor","create","Subscriber_1","call","source","DebounceTimeSubscriber","_super","destination","debouncedSubscription","lastValue","hasValue","_next","clearDebounce","add","_complete","complete","next","remove","unsubscribe","Subscriber","878","observables","_i","concurrent","Number","POSITIVE_INFINITY","last","isScheduler_1","isScheduler","pop","ArrayObservable_1","ArrayObservable","mergeAll_1","MergeAllOperator","879","Subscription_1","Action","Subscription","880","root_1","Action_1","AsyncAction","pending","closed","id","recycleAsyncId","requestAsyncId","root","setInterval","flush","bind","clearInterval","undefined","execute","Error","_execute","errored","errorValue","e","_unsubscribe","actions","index","indexOf","splice","881","Scheduler_1","AsyncScheduler","active","scheduled","action","push","shift","882","AsyncAction_1","AsyncScheduler_1"],"mappings":"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","file":"0.d5477476ba80de7df62b.chunk.js","sourcesContent":["webpackJsonp([0,8],{\n\n/***/ 847:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_material__ = __webpack_require__(286);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__loginlogout_component__ = __webpack_require__(853);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__loginlogout_routing__ = __webpack_require__(859);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__shared_shared_module__ = __webpack_require__(485);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__loginlogout_service__ = __webpack_require__(854);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"LoginlogoutModule\", function() { return LoginlogoutModule; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\n\n\nvar LoginlogoutModule = (function () {\n    function LoginlogoutModule() {\n    }\n    LoginlogoutModule = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"v\" /* NgModule */])({\n            imports: [\n                __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"b\" /* CommonModule */],\n                __WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"b\" /* FormsModule */],\n                __WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"h\" /* ReactiveFormsModule */],\n                __WEBPACK_IMPORTED_MODULE_3__angular_material__[\"MaterialModule\"].forRoot(),\n                __WEBPACK_IMPORTED_MODULE_5__loginlogout_routing__[\"a\" /* LoginLogoutRoutes */],\n                __WEBPACK_IMPORTED_MODULE_6__shared_shared_module__[\"a\" /* SharedModule */]\n            ],\n            declarations: [\n                __WEBPACK_IMPORTED_MODULE_4__loginlogout_component__[\"a\" /* LoginlogoutComponent */]\n            ],\n            providers: [\n                __WEBPACK_IMPORTED_MODULE_7__loginlogout_service__[\"a\" /* LoginlogoutService */]\n            ],\n            exports: []\n        }), \n        __metadata('design:paramtypes', [])\n    ], LoginlogoutModule);\n    return LoginlogoutModule;\n}());\n//# sourceMappingURL=/Users/prashantkoshta/development/blog-dev-command/src/loginlogout.module.js.map\n\n/***/ },\n\n/***/ 853:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(285);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_platform_browser__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_debounceTime__ = __webpack_require__(875);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_debounceTime___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_debounceTime__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromEvent__ = __webpack_require__(288);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromEvent___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromEvent__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_merge__ = __webpack_require__(874);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_merge___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_merge__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shared_utils_genericvalidator__ = __webpack_require__(860);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__loginlogout_service__ = __webpack_require__(854);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return LoginlogoutComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\n\n\n\n\nvar LoginlogoutComponent = (function () {\n    function LoginlogoutComponent(fb, router, titleService, loginService) {\n        this.fb = fb;\n        this.router = router;\n        this.titleService = titleService;\n        this.loginService = loginService;\n        this.displayMessage = {};\n        this.titleService.setTitle(\"SignIn\");\n        this.validationMessages = {\n            loginName: {\n                required: 'Userid or Email is required.',\n                minlength: 'Userid must be at least 8 characters.',\n                maxlength: 'Userid cannot exceed 50 characters.'\n            },\n            loginPassword: {\n                required: 'Password is required.',\n                minlength: 'Password must be at least 8 characters.',\n                maxlength: 'Password cannot exceed 50 characters.'\n            }\n        };\n    }\n    LoginlogoutComponent.prototype.ngOnInit = function () {\n        this.loginFrom = this.fb.group({\n            loginName: [\"\", [__WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"e\" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"e\" /* Validators */].minLength(8), __WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"e\" /* Validators */].maxLength(50)]],\n            loginPassword: [\"\", [__WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"e\" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"e\" /* Validators */].minLength(8), __WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"e\" /* Validators */].maxLength(50)]]\n        });\n        this.genericValidator = new __WEBPACK_IMPORTED_MODULE_8__shared_utils_genericvalidator__[\"a\" /* Genericvalidator */](this.validationMessages);\n    };\n    LoginlogoutComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        // Watch for the blur event from any input element on the form.\n        var controlBlurs = this.formInputElements\n            .map(function (formControl) { return __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__[\"Observable\"].fromEvent(formControl.nativeElement, 'blur'); });\n        // Merge the blur event observable with the valueChanges observable\n        __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__[\"Observable\"].merge.apply(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__[\"Observable\"], [this.loginFrom.valueChanges].concat(controlBlurs)).debounceTime(800).subscribe(function (value) {\n            _this.displayMessage = _this.genericValidator.processMessages(_this.loginFrom);\n        });\n    };\n    LoginlogoutComponent.prototype.ngOnDestroy = function () {\n    };\n    LoginlogoutComponent.prototype.onLogin = function () {\n        var _this = this;\n        // DO action\n        this.loginFrom;\n        var p = Object.assign({}, this.data, this.loginFrom.value);\n        this.loginService.login(p)\n            .subscribe(function (value) { return _this.router.navigate(['/application']); }, function (error) { return _this.errorMessage = \"Invalid Userid & Password.\"; });\n    };\n    LoginlogoutComponent.prototype.onCancel = function () {\n        this.router.navigate(['/git']);\n    };\n    __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_13\" /* ViewChildren */])(__WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"f\" /* FormControlName */], { read: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"j\" /* ElementRef */] }), \n        __metadata('design:type', Array)\n    ], LoginlogoutComponent.prototype, \"formInputElements\", void 0);\n    LoginlogoutComponent = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"P\" /* Component */])({\n            selector: 'app-loginlogout',\n            template: __webpack_require__(872),\n            styles: [__webpack_require__(866)]\n        }), \n        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"g\" /* FormBuilder */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__angular_forms__[\"g\" /* FormBuilder */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1__angular_router__[\"b\" /* Router */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_router__[\"b\" /* Router */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_3__angular_platform_browser__[\"a\" /* Title */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_3__angular_platform_browser__[\"a\" /* Title */]) === 'function' && _c) || Object, (typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_9__loginlogout_service__[\"a\" /* LoginlogoutService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_9__loginlogout_service__[\"a\" /* LoginlogoutService */]) === 'function' && _d) || Object])\n    ], LoginlogoutComponent);\n    return LoginlogoutComponent;\n    var _a, _b, _c, _d;\n}());\n//# sourceMappingURL=/Users/prashantkoshta/development/blog-dev-command/src/loginlogout.component.js.map\n\n/***/ },\n\n/***/ 854:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_do__ = __webpack_require__(291);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_do___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_do__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch__ = __webpack_require__(290);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_throw__ = __webpack_require__(486);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_throw___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_throw__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__ = __webpack_require__(94);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_observable_of__ = __webpack_require__(289);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_observable_of__);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return LoginlogoutService; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\n\n\nvar LoginlogoutService = (function () {\n    function LoginlogoutService(http) {\n        this.http = http;\n        this.baseUrl = 'http://localhost:3000/users/signin';\n    }\n    LoginlogoutService.prototype.login = function (arg) {\n        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__[\"c\" /* Headers */]({ 'Content-Type': 'application/json' });\n        var options = new __WEBPACK_IMPORTED_MODULE_1__angular_http__[\"d\" /* RequestOptions */]({ headers: headers });\n        var url = \"\" + this.baseUrl;\n        return this.http.post(this.baseUrl, arg, options)\n            .map(this.extractData)\n            .do(function (data) { return data; }) //console.log('Login Response: ',data))\n            .catch(this.handleError);\n    };\n    LoginlogoutService.prototype.extractData = function (response) {\n        return response.status || {};\n    };\n    LoginlogoutService.prototype.handleError = function (error) {\n        return __WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__[\"Observable\"].throw(error.json().error || 'Server error');\n    };\n    LoginlogoutService = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"c\" /* Injectable */])(), \n        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_http__[\"a\" /* Http */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_http__[\"a\" /* Http */]) === 'function' && _a) || Object])\n    ], LoginlogoutService);\n    return LoginlogoutService;\n    var _a;\n}());\n//# sourceMappingURL=/Users/prashantkoshta/development/blog-dev-command/src/loginlogout.service.js.map\n\n/***/ },\n\n/***/ 859:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__loginlogout_component__ = __webpack_require__(853);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(285);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return LoginLogoutRoutes; });\n\n\nvar routes = [\n    { path: '', component: __WEBPACK_IMPORTED_MODULE_0__loginlogout_component__[\"a\" /* LoginlogoutComponent */] }\n];\nvar LoginLogoutRoutes = __WEBPACK_IMPORTED_MODULE_1__angular_router__[\"a\" /* RouterModule */].forChild(routes);\n//# sourceMappingURL=/Users/prashantkoshta/development/blog-dev-command/src/loginlogout.routing.js.map\n\n/***/ },\n\n/***/ 860:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_forms__ = __webpack_require__(45);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return Genericvalidator; });\n\nvar Genericvalidator = (function () {\n    function Genericvalidator(validationMessages) {\n        this.validationMessages = validationMessages;\n    }\n    Genericvalidator.prototype.processMessages = function (container) {\n        var _this = this;\n        var messages = {};\n        var _loop_1 = function(controlKey) {\n            if (container.controls.hasOwnProperty(controlKey)) {\n                var c = container.controls[controlKey];\n                // If it is a FormGroup, process its child controls.\n                if (c instanceof __WEBPACK_IMPORTED_MODULE_0__angular_forms__[\"d\" /* FormGroup */]) {\n                    var childMessages = this_1.processMessages(c);\n                    Object.assign(messages, childMessages);\n                }\n                else {\n                    // Only validate if there are validation messages for the control\n                    if (this_1.validationMessages[controlKey]) {\n                        messages[controlKey] = '';\n                        if ((c.dirty || c.touched) && c.errors) {\n                            Object.keys(c.errors).map(function (messageKey) {\n                                if (_this.validationMessages[controlKey][messageKey]) {\n                                    messages[controlKey] += _this.validationMessages[controlKey][messageKey] + ' ';\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n        };\n        var this_1 = this;\n        for (var controlKey in container.controls) {\n            _loop_1(controlKey);\n        }\n        return messages;\n    };\n    return Genericvalidator;\n}());\n//# sourceMappingURL=/Users/prashantkoshta/development/blog-dev-command/src/genericvalidator.js.map\n\n/***/ },\n\n/***/ 866:\n/***/ function(module, exports) {\n\nmodule.exports = \".box{margin-left:auto;margin-right:auto;width:30%}.from-input{width:100%}@media (max-width: 991px){.box{margin-left:auto;margin-right:auto;width:60%}}@media (max-width: 450px){.box{margin-left:auto;margin-right:auto;width:90%}.from-input{width:100%}}\\n\"\n\n/***/ },\n\n/***/ 872:\n/***/ function(module, exports) {\n\nmodule.exports = \"<form novalidate [formGroup]=\\\"loginFrom\\\" (submit)=\\\"onLogin()\\\">\\n<div class=\\\"box\\\">\\n  <md-card>\\n    <md-card-title>Signin</md-card-title>   \\n    <md-card-content>\\n          <div>\\n              <md-input md-input class=\\\"from-input\\\" id=\\\"loginNameId\\\"  formControlName=\\\"loginName\\\" type=\\\"text\\\" placeholder=\\\"Enter Userid or Emailid\\\" value=\\\"\\\">\\n                  <md-hint align=\\\"start\\\" [ngStyle]=\\\"{'color': 'red'}\\\" *ngIf=\\\"displayMessage.loginName\\\">{{displayMessage.loginName}}</md-hint>\\n              </md-input>\\n          </div>\\n          <br />\\n          <div>\\n              <md-input md-input class=\\\"from-input\\\"  id=\\\"loginPasswordId\\\" formControlName=\\\"loginPassword\\\" type=\\\"password\\\" placeholder=\\\"Enter Password\\\" value=\\\"\\\">\\n                  <md-hint [ngStyle]=\\\"{'color': 'red'}\\\" align=\\\"start\\\" *ngIf=\\\"displayMessage.loginPassword\\\">{{displayMessage.loginPassword}}</md-hint>\\n              </md-input>\\n          </div>\\n          <br />\\n          <div>\\n              <button md-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!loginFrom.valid\\\">Login</button>\\n              <button md-button type =\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n          </div>\\n    </md-card-content>\\n  </md-card>\\n</div>\\n</form>\\n\"\n\n/***/ },\n\n/***/ 873:\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n/***/ },\n\n/***/ 874:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(2);\nvar merge_1 = __webpack_require__(876);\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n/***/ },\n\n/***/ 875:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(2);\nvar debounceTime_1 = __webpack_require__(877);\nObservable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n//# sourceMappingURL=debounceTime.js.map\n\n/***/ },\n\n/***/ 876:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar merge_1 = __webpack_require__(878);\nexports.merge = merge_1.mergeStatic;\n//# sourceMappingURL=merge.js.map\n\n/***/ },\n\n/***/ 877:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(22);\nvar async_1 = __webpack_require__(882);\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nexports.debounceTime = debounceTime;\nvar DebounceTimeOperator = (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = (function (_super) {\n    __extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        _super.call(this, destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            this.destination.next(this.lastValue);\n            this.lastValue = null;\n            this.hasValue = false;\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n\n/***/ },\n\n/***/ 878:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar ArrayObservable_1 = __webpack_require__(292);\nvar mergeAll_1 = __webpack_require__(183);\nvar isScheduler_1 = __webpack_require__(487);\n/* tslint:disable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return this.lift.call(mergeStatic.apply(void 0, [this].concat(observables)));\n}\nexports.merge = merge;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...Observable} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));\n}\nexports.mergeStatic = mergeStatic;\n//# sourceMappingURL=merge.js.map\n\n/***/ },\n\n/***/ 879:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = __webpack_require__(78);\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n/***/ },\n\n/***/ 880:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = __webpack_require__(54);\nvar Action_1 = __webpack_require__(879);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n/***/ },\n\n/***/ 881:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = __webpack_require__(873);\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n/***/ },\n\n/***/ 882:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar AsyncAction_1 = __webpack_require__(880);\nvar AsyncScheduler_1 = __webpack_require__(881);\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.d5477476ba80de7df62b.chunk.js","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '@angular/material';\nimport { LoginlogoutComponent } from './loginlogout.component';\nimport { LoginLogoutRoutes } from './loginlogout.routing';\nimport { SharedModule } from '../shared/shared.module';\nimport { LoginlogoutService } from './loginlogout.service'\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule.forRoot(),\n    LoginLogoutRoutes,\n    SharedModule\n  ],\n  declarations: [\n    LoginlogoutComponent\n  ],\n  providers:[\n    LoginlogoutService\n  ],\n  exports:[]\n})\nexport class LoginlogoutModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/loginlogout/loginlogout.module.ts","import { Component, OnInit, ViewChildren, ElementRef, OnDestroy, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute, Router  } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators, FormControlName, AbstractControl } from '@angular/forms';\nimport {Title} from '@angular/platform-browser';\n\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/observable/merge';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription'\n\nimport {Genericvalidator} from './../shared/utils/genericvalidator'\n\nimport {LoginlogoutService} from './loginlogout.service'\nimport {ILoginlogout} from \"./Loginlogout\"\n\n\n@Component({\n  selector: 'app-loginlogout',\n  templateUrl: './loginlogout.component.html',\n  styleUrls: ['./loginlogout.component.scss']\n})\nexport class LoginlogoutComponent implements OnInit,OnDestroy, AfterViewInit {\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n  loginFrom:FormGroup;\n  errorMessage:string;\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: Genericvalidator;\n  data:ILoginlogout\n\n  constructor(private fb: FormBuilder, private router: Router,private titleService: Title,private loginService:LoginlogoutService) { \n      this.titleService.setTitle( \"SignIn\" );\n      this.validationMessages = {\n            loginName: {\n                required: 'Userid or Email is required.',\n                minlength: 'Userid must be at least 8 characters.',\n                maxlength: 'Userid cannot exceed 50 characters.'\n            },\n            loginPassword: {\n                required: 'Password is required.',\n                minlength: 'Password must be at least 8 characters.',\n                maxlength: 'Password cannot exceed 50 characters.'\n            }\n      };\n  }\n\n  ngOnInit() : void {\n    this.loginFrom = this.fb.group({\n      loginName : [\"\",[Validators.required,Validators.minLength(8),Validators.maxLength(50)]],\n      loginPassword  : [\"\",[Validators.required,Validators.minLength(8),Validators.maxLength(50)]]\n    });\n\n   this.genericValidator = new Genericvalidator(this.validationMessages);\n\n  }\n\n ngAfterViewInit(): void {\n    // Watch for the blur event from any input element on the form.\n      let controlBlurs: Observable<any>[] = this.formInputElements\n          .map((formControl: ElementRef) => Observable.fromEvent(formControl.nativeElement, 'blur'));\n\n      // Merge the blur event observable with the valueChanges observable\n      Observable.merge(this.loginFrom.valueChanges, ...controlBlurs).debounceTime(800).subscribe(value => {\n          this.displayMessage = this.genericValidator.processMessages(this.loginFrom);\n      });\n }\n\n  ngOnDestroy(): void {\n\n  }\n\n  onLogin(): void {\n     // DO action\n     this.loginFrom\n     let p = Object.assign({}, this.data, this.loginFrom.value);\n     this.loginService.login(p)\n            .subscribe(\n                (value) => this.router.navigate(['/application']),\n                (error: any) => this.errorMessage=\"Invalid Userid & Password.\"\n        );\n  }\n  onCancel():void{\n      this.router.navigate(['/git']);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/loginlogout/loginlogout.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class LoginlogoutService {\n  private baseUrl = 'http://localhost:3000/users/signin';\n  constructor(private http: Http) { }\n\n  login(arg:any):Observable<Response>{\n     let headers = new Headers({ 'Content-Type': 'application/json' });\n     let options = new RequestOptions({ headers: headers }); \n     const url = `${this.baseUrl}`;\n     return this.http.post(this.baseUrl, arg, options)\n        .map(this.extractData)\n        .do(data => data)//console.log('Login Response: ',data))\n        .catch(this.handleError);\n  }\n\n   private extractData(response: Response) {\n        return response.status || {};\n    }\n\n    private handleError(error: Response): Observable<any> {\n        return Observable.throw(error.json().error || 'Server error');\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/loginlogout/loginlogout.service.ts","import { ModuleWithProviders } from '@angular/core';\nimport { LoginlogoutComponent } from \"./loginlogout.component\";\nimport { RouterModule,Routes } from '@angular/router';\n\nconst routes: Routes = [\n      { path: '', component: LoginlogoutComponent }\n];\nexport const LoginLogoutRoutes:ModuleWithProviders = RouterModule.forChild(routes);\n\n\n// WEBPACK FOOTER //\n// ./src/app/loginlogout/loginlogout.routing.ts","import { FormGroup } from '@angular/forms';\n\nexport class Genericvalidator {\n    constructor(private validationMessages: { [key: string]: { [key: string]: string } }) {\n\n    }\n\n    processMessages(container: FormGroup): { [key: string]: string } {\n        let messages = {};\n        for (let controlKey in container.controls) {\n            if (container.controls.hasOwnProperty(controlKey)) {\n                let c = container.controls[controlKey];\n                // If it is a FormGroup, process its child controls.\n                if (c instanceof FormGroup) {\n                    let childMessages = this.processMessages(c);\n                    Object.assign(messages, childMessages);\n                } else {\n                    // Only validate if there are validation messages for the control\n                    if (this.validationMessages[controlKey]) {\n                        messages[controlKey] = '';\n                        if ((c.dirty || c.touched) && c.errors) {\n                            Object.keys(c.errors).map(messageKey => {\n                                if (this.validationMessages[controlKey][messageKey]) {\n                                    messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        \n        return messages;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/genericvalidator.ts","module.exports = \".box{margin-left:auto;margin-right:auto;width:30%}.from-input{width:100%}@media (max-width: 991px){.box{margin-left:auto;margin-right:auto;width:60%}}@media (max-width: 450px){.box{margin-left:auto;margin-right:auto;width:90%}.from-input{width:100%}}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/loginlogout/loginlogout.component.scss\n// module id = 866\n// module chunks = 0","module.exports = \"<form novalidate [formGroup]=\\\"loginFrom\\\" (submit)=\\\"onLogin()\\\">\\n<div class=\\\"box\\\">\\n  <md-card>\\n    <md-card-title>Signin</md-card-title>   \\n    <md-card-content>\\n          <div>\\n              <md-input md-input class=\\\"from-input\\\" id=\\\"loginNameId\\\"  formControlName=\\\"loginName\\\" type=\\\"text\\\" placeholder=\\\"Enter Userid or Emailid\\\" value=\\\"\\\">\\n                  <md-hint align=\\\"start\\\" [ngStyle]=\\\"{'color': 'red'}\\\" *ngIf=\\\"displayMessage.loginName\\\">{{displayMessage.loginName}}</md-hint>\\n              </md-input>\\n          </div>\\n          <br />\\n          <div>\\n              <md-input md-input class=\\\"from-input\\\"  id=\\\"loginPasswordId\\\" formControlName=\\\"loginPassword\\\" type=\\\"password\\\" placeholder=\\\"Enter Password\\\" value=\\\"\\\">\\n                  <md-hint [ngStyle]=\\\"{'color': 'red'}\\\" align=\\\"start\\\" *ngIf=\\\"displayMessage.loginPassword\\\">{{displayMessage.loginPassword}}</md-hint>\\n              </md-input>\\n          </div>\\n          <br />\\n          <div>\\n              <button md-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!loginFrom.valid\\\">Login</button>\\n              <button md-button type =\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n          </div>\\n    </md-card-content>\\n  </md-card>\\n</div>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/loginlogout/loginlogout.component.html\n// module id = 872\n// module chunks = 0","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Scheduler.js\n// module id = 873\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../observable/merge');\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/merge.js\n// module id = 874\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar debounceTime_1 = require('../../operator/debounceTime');\nObservable_1.Observable.prototype.debounceTime = debounceTime_1.debounceTime;\n//# sourceMappingURL=debounceTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/debounceTime.js\n// module id = 875\n// module chunks = 0","\"use strict\";\nvar merge_1 = require('../operator/merge');\nexports.merge = merge_1.mergeStatic;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/merge.js\n// module id = 876\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nfunction debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nexports.debounceTime = debounceTime;\nvar DebounceTimeOperator = (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceTimeSubscriber = (function (_super) {\n    __extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        _super.call(this, destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            this.destination.next(this.lastValue);\n            this.lastValue = null;\n            this.hasValue = false;\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/debounceTime.js\n// module id = 877\n// module chunks = 0","\"use strict\";\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\nvar isScheduler_1 = require('../util/isScheduler');\n/* tslint:disable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return this.lift.call(mergeStatic.apply(void 0, [this].concat(observables)));\n}\nexports.merge = merge;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...Observable} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));\n}\nexports.mergeStatic = mergeStatic;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/merge.js\n// module id = 878\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/Action.js\n// module id = 879\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncAction.js\n// module id = 880\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncScheduler.js\n// module id = 881\n// module chunks = 0","\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/async.js\n// module id = 882\n// module chunks = 0"],"sourceRoot":""}