{"version":3,"sources":["webpack:///2.99df8e655beb3724c940.chunk.js","webpack:///./src/app/git/git.module.ts","webpack:///./src/app/git/git.component.ts","webpack:///./src/app/git/git.routing.ts","webpack:///./src/app/git/git.component.scss","webpack:///./src/app/git/git.component.html"],"names":["webpackJsonp","839","module","exports","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__angular_common__","__WEBPACK_IMPORTED_MODULE_2__git_routing__","__WEBPACK_IMPORTED_MODULE_3__git_component__","__WEBPACK_IMPORTED_MODULE_4__angular_material__","__WEBPACK_IMPORTED_MODULE_5__shared_shared_module__","d","GitModule","__decorate","this","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","imports","forRoot","declarations","843","__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__","GitComponent","titleService","setTitle","prototype","ngOnInit","selector","template","styles","_a","846","__WEBPACK_IMPORTED_MODULE_0__git_component__","__WEBPACK_IMPORTED_MODULE_1__angular_router__","GitRoutes","routes","path","component","forChild","850","854"],"mappings":"AAAAA,cAAc,EAAE,IAEVC,IACA,SAASC,EAAQC,EAASC,GAEhC,YACqB,IAAIC,GAA8CD,EAAoB,GAClEE,EAAgDF,EAAoB,IACpEG,EAA6CH,EAAoB,KACjEI,EAA+CJ,EAAoB,KACnEK,EAAkDL,EAAoB,KACtEM,EAAsDN,EAAoB,IACpEA,GAAoBO,EAAER,EAAS,YAAa,WAAa,MAAOS,IAC/F,IAAIC,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HP,GAAvHQ,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOK,OAAOC,yBAAyBR,EAAQC,GAAOC,CACrH,IAAuB,gBAAZO,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASX,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIS,GAAIZ,EAAWM,OAAS,EAAGM,GAAK,EAAGA,KAAShB,EAAII,EAAWY,MAAIL,GAAKH,EAAI,EAAIR,EAAEW,GAAKH,EAAI,EAAIR,EAAEK,EAAQC,EAAKK,GAAKX,EAAEK,EAAQC,KAASK,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeZ,EAAQC,EAAKK,GAAIA,GAE5DO,EAAcf,MAAQA,KAAKe,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,ICF1GnB,EAAA,mBAAAA,MAAyB,MAXzBA,GAAAC,GAACT,EAAAuB,EAAAtB,EAAA,IACC4B,SACE3B,EAAA,EACAC,EAAA,EACAG,EAAA,EACAD,EAAA,eAAeyB,WAEjBC,cACE3B,EAAA,KD4BIqB,EAAW,yBACZjB,OAODwB,IACA,SAASlC,EAAQC,EAASC,GAEhC,YACqB,IAAIC,GAA8CD,EAAoB,GAClEiC,EAA0DjC,EAAoB,GACxEA,GAAoBO,EAAER,EAAS,IAAK,WAAa,MAAOmC,IACvF,IAAIzB,GAAcC,MAAQA,KAAKD,YAAe,SAAUE,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HP,GAAvHQ,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOK,OAAOC,yBAAyBR,EAAQC,GAAOC,CACrH,IAAuB,gBAAZO,UAAoD,kBAArBA,SAAQC,SAAyBJ,EAAIG,QAAQC,SAASX,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIS,GAAIZ,EAAWM,OAAS,EAAGM,GAAK,EAAGA,KAAShB,EAAII,EAAWY,MAAIL,GAAKH,EAAI,EAAIR,EAAEW,GAAKH,EAAI,EAAIR,EAAEK,EAAQC,EAAKK,GAAKX,EAAEK,EAAQC,KAASK,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOK,eAAeZ,EAAQC,EAAKK,GAAIA,GAE5DO,EAAcf,MAAQA,KAAKe,YAAe,SAAUC,EAAGC,GACvD,GAAuB,gBAAZN,UAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAGC,IEzD1GO,EAAA,WAEE,QAAAA,GAAoBC,GAAAzB,KAAAyB,eAClBzB,KAAKyB,aAAaC,SAAU,OAMhC,MAHEF,GAAAG,UAAAC,SAAA,aAXFJ,EAAAzB,GAACT,EAAAuB,EAAAtB,EAAA,IACCsC,SAAU,UACVC,SAAAxC,EAAA,KACAyC,QAAAzC,EAAA,QF4EMyB,EAAW,qBAAqN,mBAAtLiB,EAAyF,mBAA7ET,GAAuE,GAAqBA,EAAuE,IAAqBS,GAAOvB,UACtPe,EAEH,IAAIQ,OAMFC,IACA,SAAS7C,EAAQC,EAASC,GAEhC,YACqB,IAAI4C,GAA+C5C,EAAoB,KACnE6C,EAAgD7C,EAAoB,IAC9DA,GAAoBO,EAAER,EAAS,IAAK,WAAa,MAAO+C,IG7FvF,IAAMC,KACEC,KAAM,GAAIC,UAAWL,EAAA,IAEhBE,EAAgCD,EAAA,EAAaK,SAASH,IHqG7DI,IACA,SAASrD,EAAQC,GI7GvBD,EAAAC,QAAA,sOJmHMqD,IACA,SAAStD,EAAQC,GKpHvBD,EAAAC,QAAA","file":"2.99df8e655beb3724c940.chunk.js","sourcesContent":["webpackJsonp([2,6],{\n\n/***/ 839:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__git_routing__ = __webpack_require__(846);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__git_component__ = __webpack_require__(843);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_material__ = __webpack_require__(285);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_shared_module__ = __webpack_require__(480);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"GitModule\", function() { return GitModule; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\nvar GitModule = (function () {\n    function GitModule() {\n    }\n    GitModule = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"v\" /* NgModule */])({\n            imports: [\n                __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"b\" /* CommonModule */],\n                __WEBPACK_IMPORTED_MODULE_2__git_routing__[\"a\" /* GitRoutes */],\n                __WEBPACK_IMPORTED_MODULE_5__shared_shared_module__[\"a\" /* SharedModule */],\n                __WEBPACK_IMPORTED_MODULE_4__angular_material__[\"MaterialModule\"].forRoot()\n            ],\n            declarations: [\n                __WEBPACK_IMPORTED_MODULE_3__git_component__[\"a\" /* GitComponent */]\n            ]\n        }), \n        __metadata('design:paramtypes', [])\n    ], GitModule);\n    return GitModule;\n}());\n//# sourceMappingURL=/Users/prashantkoshta/development/blog-dev-command/src/git.module.js.map\n\n/***/ },\n\n/***/ 843:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__ = __webpack_require__(44);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return GitComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar GitComponent = (function () {\n    function GitComponent(titleService) {\n        this.titleService = titleService;\n        this.titleService.setTitle(\"Git\");\n    }\n    GitComponent.prototype.ngOnInit = function () {\n    };\n    GitComponent = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"P\" /* Component */])({\n            selector: 'app-git',\n            template: __webpack_require__(854),\n            styles: [__webpack_require__(850)]\n        }), \n        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"a\" /* Title */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"a\" /* Title */]) === 'function' && _a) || Object])\n    ], GitComponent);\n    return GitComponent;\n    var _a;\n}());\n//# sourceMappingURL=/Users/prashantkoshta/development/blog-dev-command/src/git.component.js.map\n\n/***/ },\n\n/***/ 846:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__git_component__ = __webpack_require__(843);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(286);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return GitRoutes; });\n\n\nvar routes = [\n    { path: '', component: __WEBPACK_IMPORTED_MODULE_0__git_component__[\"a\" /* GitComponent */] },\n];\nvar GitRoutes = __WEBPACK_IMPORTED_MODULE_1__angular_router__[\"a\" /* RouterModule */].forChild(routes);\n//# sourceMappingURL=/Users/prashantkoshta/development/blog-dev-command/src/git.routing.js.map\n\n/***/ },\n\n/***/ 850:\n/***/ function(module, exports) {\n\nmodule.exports = \".box{margin-left:auto;margin-right:auto;width:80%}.sub-heading{font-size:18px;color:#333}.codebg{background-color:#f7f7f7;margin:0;padding:18px;font-size:14px}.wordbg{background-color:#f7f7f7;padding:8px}code{font-size:16px}\\n\"\n\n/***/ },\n\n/***/ 854:\n/***/ function(module, exports) {\n\nmodule.exports = \"<div class=\\\"box\\\">\\n  \\n  <md-card>\\n    <md-card-title>Git Commands</md-card-title>   \\n    <md-card-content>\\n          <p>Set of commands with short and sweet way. To keep handy.</p>\\n    </md-card-content>\\n  </md-card>\\n  <!-- Start Google Adsense -->\\n   <md-card>\\n      <md-card-content>\\n          <app-gadsense></app-gadsense>\\n      </md-card-content>\\n  </md-card>\\n  <!-- End Google Adsense -->\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\"><strong>Set your identity for first time user. So it show your name and details when you commit. </strong></p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git config --global user.name \\\"Your Name\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git config --global user.email abcdefs@example.com\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\"><strong>To clone particular branch of git</strong></p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                 git clone -b &lt;branch_name&gt; &lt;remote_repo&gt;(git@github.com:prashantkoshta/angularjs-dashboard.git)\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To checkout particular branch\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git checkout &lt;branch_name&gt;\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                    To create new branch form existing branch.\\n              </strong>\\n            </p>\\n            <ul>\\n              <li>\\n                Checkout branch from which you want to create new branch. Like i checkout master and from master i am createing new branch <span class=\\\"wordbg\\\">dev_0.1</span>\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git checkout &lt;exiting_branch_name&gt;\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git checkout -b &lt;new_branch_name&gt;\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push &lt;remote-name&gt; &lt;branch_name&gt;\\n                </code>\\n              </div>\\n              </div>\\n              <p>\\n                Where <span class=\\\"wordbg\\\">&lt;remote-name&gt;</span> is typically origin, the name which git gives to the remote you cloned from. Example:\\n              </p>\\n\\n              <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git checkout master\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git checkout -b dev_0.1\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push origin dev_0.1\\n                </code>\\n              </div>\\n              </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To commit changes on git\\n              </strong>\\n            </p>\\n            <ul>\\n              <li>\\n                check git status\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git status\\n                </code>\\n              </div>\\n            </div>\\n\\n            <ul>\\n              <li>\\n                add modifed files. <span class=\\\"wordbg\\\">.</span> show add all modified files. If you need to add specific file give file name instead of <span class=\\\"wordbg\\\">.</span>.\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git add .\\n                </code>\\n              </div>\\n            </div>\\n\\n            <ul>\\n              <li>\\n               Check file status\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git status\\n                </code>\\n              </div>\\n            </div>\\n\\n            <ul>\\n              <li>\\n                Commit changes\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git commit -m \\\"&lt;YOUR_COMMENTS_ON_COMMIT&gt;\\\"\\n                </code>\\n              </div>\\n            </div>\\n\\n            <ul>\\n              <li>\\n                Push changes\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git push\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To pull changes into local from remote branch.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git pull\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Set Beyond Compare as difftool for git.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git config --global diff.tool bc3\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git config --global difftool.bc3.path \\\"C:/Program Files (x86)/Beyond Compare 3/BCompare.exe\\\"\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Show last log. -4 show last 4 logs.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git log -4\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To check file difference by BC tool.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git difftool\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To check difference between local version with remote version.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git fetch origin\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git diff &lt;branch_name&gt; origin/&lt;branch_name&gt;\\n                </code>\\n              </div>\\n            </div>\\n            <p>\\n              If difftool already set then\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git fetch origin\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git difftool &lt;branch_name&gt; origin/&lt;branch_name&gt;\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To clean untracked git file\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git clean -df\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To reset local version with remote branch (revert local changes)\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git reset --hard HEAD\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Show list of file changed form last commit. If you like to see previos 2 then use <span class=\\\"wordbg\\\">HEAD~2</span>.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git diff --name-only HEAD HEAD~1\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Merging branch and solving conflicts\\n              </strong>\\n            </p>\\n            <p>\\n              Assuming you have 2 branch master and dev_0.1. dev_0.1 is 2 commit behind the master. Now we have to merge master changes into dev_0.1. So my dev_0.1 will includ all master recent changes.\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git checkout &gt;branch_name&lt; Like dev_0.1\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git merge &lt;remote_name&gt;/&lt;branch_name&gt; Like git merge orgin/master\\n                </code>\\n              </div>\\n            </div>\\n            <ul>\\n              <li>\\n                  It may show confilit or auto merge changes.\\n              </li>\\n              <li>\\n                  If it show confilit then your branch bash path show like <span class=\\\"wordbg\\\">(dev_0.1|MERGING)</span>. In this case we have confilict on code. It dispaly like this in confilict files.\\n              </li>\\n            </ul>\\n\\n\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  <<<<<<< HEAD\\n                </code>\\n              </div>\\n             <div>\\n                <code>\\n                  res.send(\\\"Hello world now\\\");\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  =======\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 res.send(\\\"Hello World Master Change\\\");\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 >>>>>>> origin/master\\n                </code>\\n              </div>\\n            </div>\\n\\n            <ul>\\n              <li>\\n                Next step remove confilict from files and chek file status and commit then push.\\n              </li>\\n            </ul>\\n\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git status\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git commit -m \\\"&lt;YOUR_COMMENTS_ON_COMMIT&gt;\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push\\n                </code>\\n              </div>\\n            </div>\\n\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To see the current configured remote repository for your fork.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git remote -v\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To add upstream in your fork to push changes into main respositroy from your fork repository.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git remote add upstream https://github.com/octocat/Spoon-Knife.git\\n                </code>\\n              </div>\\n            </div>\\n            <p> </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git remote -v\\n                </code>\\n              </div>\\n\\n              <div>\\n                <code>\\n                  origin https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  origin https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                    upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (fetch)\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (push)\\n                </code>\\n              </div>\\n\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To Delete git branch from local/remote\\n              </strong>\\n            </p>\\n            <ul>\\n              <li>\\n                Moveout from brach which you like to delete, checkout any other branch. Example: I like to delete dev_0.1 branch. So i checkout master branch\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git branch\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git checkout &lt;branch_name&gt;\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git branch -d &lt;delete_branch_name&gt; //Use -D instead to force deletion without checking merged status\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git branch\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push origin --delete &lt;delete_branch_name&gt; // This will push changes in remote branch.\\n                </code>\\n              </div>\\n            </div>\\n\\n            <p>\\n            Like:\\n          <p>\\n\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git checkout master\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git branch -d dev_0.1\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push origin --delete dev_0.1\\n                </code>\\n              </div>\\n            </div>\\n\\n      </md-card-content>\\n  </md-card>\\n\\n  \\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                stash your local chagnes\\n              </strong>\\n            </p>\\n            <p>\\n              Use this if you like to save your local changes but dont want to commit until its not completed and do some work on other branch.\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git stash list // show list of stash code.\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git stash // Create stash\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git stash pop //Pop your stash code\\n                </code>\\n              </div>\\n            </div>\\n            <p>\\n              Example:\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git checkout dev_0.1\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  .... Made some changes on code.\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git stash\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git checkout master\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git checkout dev_0.1\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git stash pop \\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  // Pop all local changes on which i kept save in stash but not commited and continue my work from there.\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Set env variable in window by git bash\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  export JAVA_HOME=\\\"/C/Program Files/Java/jdk1.7.0_79\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  echo $JAVA_HOME\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Set environment variable in git base\\n              </strong>\\n            </p>\\n            <ul>\\n              <li>\\n                  Go to git bash home directory. It is genrally C:\\\\Users\\\\user_name\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  touch .bashrc\\n                </code>\\n              </div>\\n            </div>\\n            <ul>\\n              <li>\\n                  Edit <span class=\\\"wordbg\\\">.bashrc</span> with required env variables\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  export JAVA_HOME=\\\"/C/Program Files/Java/jdk1.7.0_79\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  export GRADLE_HOME=\\\"/C/Users/gradle-2.10\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  export ANDROID_HOME=\\\"/C/Users/android-sdk-windows\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  export MAVEN_LOCAL_DIR=$ANDROID_HOME/extras/android/m2repository\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  export PATH=$PATH:$JAVA_HOME/bin:$GRADLE_HOME/bin:$ANDROID_HOME/tools:$ANDROID_HOME/platforms\\n                </code>\\n              </div>\\n              \\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Working with fork and upstream\\n              </strong>\\n            </p>\\n            <ul>\\n              <li>\\n                Check upstream branch\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git remote -v\\n                </code>\\n              </div>\\n            </div>\\n            <ul>\\n              <li>\\n                Add upstream branch into fork\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git remote add upstream https://github.com/test/test-demo.git\\n                </code>\\n              </div>\\n            </div>\\n            <ul>\\n              <li>\\n                Get upstream branh into fork, which is not present in fork.\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git fetch upstream\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git checkout &lt;UPSTREAM_BRANCH_NAME&gt;\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push origin <&lt;PSTREAM_BRANCH_NAME&gt; // It will add branch in fork repository\\n                </code>\\n              </div>\\n            </div> \\n            <ul>\\n              <li>\\n                Reset local changes in fork repository branch with upstream branch\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git reset --hard upstream/&lt;BRANCH_NAME&gt;\\n                </code>\\n              </div>\\n            </div>\\n            <ul>\\n              <li>\\n                pull changes from upstream branch to fork repo branch\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git pull upstram &lt;branch_name&gt;  // Fix confilicts if you get any.\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git add .\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git commit -m \\\"&lt;COMMENTS&gt;\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push origin &lt;BRANCH_NAME&gt;\\n                </code>\\n              </div>\\n            </div>\\n              <ul>\\n              <li>\\n                To merge upstream changes into fork branch / syncing a fork\\n\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git fetch upstream\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git diff upstream/&lt;BRANCH_NAME&gt; origin/&lt;BRANCH_NAME&gt;\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git merge upstream/&lt;BRANCH_NAME&gt;  // Fix confilicts if you get any.\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git status\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git add .\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git status\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git commit -m \\\"&lt;COMMENTS&gt;\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push origin &lt;BRANCH_NAME&gt;\\n                </code>\\n              </div>\\n            </div>\\n            <ul>\\n              <li>\\n                To abort rebase skip or continue\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git rebase --continue\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git rebase --skip\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git rebase --abort // it move to dev_0.1 from (dev_0.1|REBASE 2/3) \\n                </code>\\n              </div>\\n            </div>\\n\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Revert changes in git branch\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git log\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git revert --no-commit 5fde377..HEAD // 5fde377 commit number\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git commit -m \\\"Revert changes\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push\\n                </code>\\n              </div>\\n              \\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n</div>\\n\"\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 2.99df8e655beb3724c940.chunk.js","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GitRoutes } from './git.routing'\nimport { GitComponent } from './git.component';\nimport { MaterialModule } from '@angular/material';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    GitRoutes,\n    SharedModule,\n    MaterialModule.forRoot()\n  ],\n  declarations: [\n    GitComponent\n  ]\n})\nexport class GitModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/git/git.module.ts","import { Component, OnInit } from '@angular/core';\nimport {Title} from '@angular/platform-browser'\n\n@Component({\n  selector: 'app-git',\n  templateUrl: './git.component.html',\n  styleUrls: ['./git.component.scss']\n})\nexport class GitComponent implements OnInit {\n\n  constructor(private titleService: Title) { \n    this.titleService.setTitle( \"Git\" );\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/git/git.component.ts","import { ModuleWithProviders } from '@angular/core';\nimport {GitComponent} from \"./git.component\";\nimport { RouterModule,Routes} from '@angular/router';\n\nconst routes: Routes = [\n      { path: '', component: GitComponent },\n];\nexport const GitRoutes:ModuleWithProviders = RouterModule.forChild(routes);\n\n\n// WEBPACK FOOTER //\n// ./src/app/git/git.routing.ts","module.exports = \".box{margin-left:auto;margin-right:auto;width:80%}.sub-heading{font-size:18px;color:#333}.codebg{background-color:#f7f7f7;margin:0;padding:18px;font-size:14px}.wordbg{background-color:#f7f7f7;padding:8px}code{font-size:16px}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/git/git.component.scss\n// module id = 850\n// module chunks = 2","module.exports = \"<div class=\\\"box\\\">\\n  \\n  <md-card>\\n    <md-card-title>Git Commands</md-card-title>   \\n    <md-card-content>\\n          <p>Set of commands with short and sweet way. To keep handy.</p>\\n    </md-card-content>\\n  </md-card>\\n  <!-- Start Google Adsense -->\\n   <md-card>\\n      <md-card-content>\\n          <app-gadsense></app-gadsense>\\n      </md-card-content>\\n  </md-card>\\n  <!-- End Google Adsense -->\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\"><strong>Set your identity for first time user. So it show your name and details when you commit. </strong></p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git config --global user.name \\\"Your Name\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git config --global user.email abcdefs@example.com\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\"><strong>To clone particular branch of git</strong></p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                 git clone -b &lt;branch_name&gt; &lt;remote_repo&gt;(git@github.com:prashantkoshta/angularjs-dashboard.git)\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To checkout particular branch\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git checkout &lt;branch_name&gt;\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                    To create new branch form existing branch.\\n              </strong>\\n            </p>\\n            <ul>\\n              <li>\\n                Checkout branch from which you want to create new branch. Like i checkout master and from master i am createing new branch <span class=\\\"wordbg\\\">dev_0.1</span>\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git checkout &lt;exiting_branch_name&gt;\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git checkout -b &lt;new_branch_name&gt;\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push &lt;remote-name&gt; &lt;branch_name&gt;\\n                </code>\\n              </div>\\n              </div>\\n              <p>\\n                Where <span class=\\\"wordbg\\\">&lt;remote-name&gt;</span> is typically origin, the name which git gives to the remote you cloned from. Example:\\n              </p>\\n\\n              <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git checkout master\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git checkout -b dev_0.1\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push origin dev_0.1\\n                </code>\\n              </div>\\n              </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To commit changes on git\\n              </strong>\\n            </p>\\n            <ul>\\n              <li>\\n                check git status\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git status\\n                </code>\\n              </div>\\n            </div>\\n\\n            <ul>\\n              <li>\\n                add modifed files. <span class=\\\"wordbg\\\">.</span> show add all modified files. If you need to add specific file give file name instead of <span class=\\\"wordbg\\\">.</span>.\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git add .\\n                </code>\\n              </div>\\n            </div>\\n\\n            <ul>\\n              <li>\\n               Check file status\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git status\\n                </code>\\n              </div>\\n            </div>\\n\\n            <ul>\\n              <li>\\n                Commit changes\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git commit -m \\\"&lt;YOUR_COMMENTS_ON_COMMIT&gt;\\\"\\n                </code>\\n              </div>\\n            </div>\\n\\n            <ul>\\n              <li>\\n                Push changes\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git push\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To pull changes into local from remote branch.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git pull\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Set Beyond Compare as difftool for git.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git config --global diff.tool bc3\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git config --global difftool.bc3.path \\\"C:/Program Files (x86)/Beyond Compare 3/BCompare.exe\\\"\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Show last log. -4 show last 4 logs.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git log -4\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To check file difference by BC tool.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git difftool\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To check difference between local version with remote version.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git fetch origin\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git diff &lt;branch_name&gt; origin/&lt;branch_name&gt;\\n                </code>\\n              </div>\\n            </div>\\n            <p>\\n              If difftool already set then\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git fetch origin\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git difftool &lt;branch_name&gt; origin/&lt;branch_name&gt;\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To clean untracked git file\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git clean -df\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To reset local version with remote branch (revert local changes)\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git reset --hard HEAD\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Show list of file changed form last commit. If you like to see previos 2 then use <span class=\\\"wordbg\\\">HEAD~2</span>.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git diff --name-only HEAD HEAD~1\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Merging branch and solving conflicts\\n              </strong>\\n            </p>\\n            <p>\\n              Assuming you have 2 branch master and dev_0.1. dev_0.1 is 2 commit behind the master. Now we have to merge master changes into dev_0.1. So my dev_0.1 will includ all master recent changes.\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git checkout &gt;branch_name&lt; Like dev_0.1\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git merge &lt;remote_name&gt;/&lt;branch_name&gt; Like git merge orgin/master\\n                </code>\\n              </div>\\n            </div>\\n            <ul>\\n              <li>\\n                  It may show confilit or auto merge changes.\\n              </li>\\n              <li>\\n                  If it show confilit then your branch bash path show like <span class=\\\"wordbg\\\">(dev_0.1|MERGING)</span>. In this case we have confilict on code. It dispaly like this in confilict files.\\n              </li>\\n            </ul>\\n\\n\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  <<<<<<< HEAD\\n                </code>\\n              </div>\\n             <div>\\n                <code>\\n                  res.send(\\\"Hello world now\\\");\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  =======\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 res.send(\\\"Hello World Master Change\\\");\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 >>>>>>> origin/master\\n                </code>\\n              </div>\\n            </div>\\n\\n            <ul>\\n              <li>\\n                Next step remove confilict from files and chek file status and commit then push.\\n              </li>\\n            </ul>\\n\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git status\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git commit -m \\\"&lt;YOUR_COMMENTS_ON_COMMIT&gt;\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push\\n                </code>\\n              </div>\\n            </div>\\n\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To see the current configured remote repository for your fork.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git remote -v\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  origin  https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To add upstream in your fork to push changes into main respositroy from your fork repository.\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git remote add upstream https://github.com/octocat/Spoon-Knife.git\\n                </code>\\n              </div>\\n            </div>\\n            <p> </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git remote -v\\n                </code>\\n              </div>\\n\\n              <div>\\n                <code>\\n                  origin https://github.com/YOUR_USERNAME/YOUR_FORK.git (fetch)\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  origin https://github.com/YOUR_USERNAME/YOUR_FORK.git (push)\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                    upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (fetch)\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  upstream  https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git (push)\\n                </code>\\n              </div>\\n\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                To Delete git branch from local/remote\\n              </strong>\\n            </p>\\n            <ul>\\n              <li>\\n                Moveout from brach which you like to delete, checkout any other branch. Example: I like to delete dev_0.1 branch. So i checkout master branch\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git branch\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git checkout &lt;branch_name&gt;\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git branch -d &lt;delete_branch_name&gt; //Use -D instead to force deletion without checking merged status\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git branch\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push origin --delete &lt;delete_branch_name&gt; // This will push changes in remote branch.\\n                </code>\\n              </div>\\n            </div>\\n\\n            <p>\\n            Like:\\n          <p>\\n\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git checkout master\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git branch -d dev_0.1\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push origin --delete dev_0.1\\n                </code>\\n              </div>\\n            </div>\\n\\n      </md-card-content>\\n  </md-card>\\n\\n  \\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                stash your local chagnes\\n              </strong>\\n            </p>\\n            <p>\\n              Use this if you like to save your local changes but dont want to commit until its not completed and do some work on other branch.\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git stash list // show list of stash code.\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git stash // Create stash\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git stash pop //Pop your stash code\\n                </code>\\n              </div>\\n            </div>\\n            <p>\\n              Example:\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git checkout dev_0.1\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  .... Made some changes on code.\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git stash\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git checkout master\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git checkout dev_0.1\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git stash pop \\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  // Pop all local changes on which i kept save in stash but not commited and continue my work from there.\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Set env variable in window by git bash\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  export JAVA_HOME=\\\"/C/Program Files/Java/jdk1.7.0_79\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  echo $JAVA_HOME\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Set environment variable in git base\\n              </strong>\\n            </p>\\n            <ul>\\n              <li>\\n                  Go to git bash home directory. It is genrally C:\\\\Users\\\\user_name\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  touch .bashrc\\n                </code>\\n              </div>\\n            </div>\\n            <ul>\\n              <li>\\n                  Edit <span class=\\\"wordbg\\\">.bashrc</span> with required env variables\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  export JAVA_HOME=\\\"/C/Program Files/Java/jdk1.7.0_79\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  export GRADLE_HOME=\\\"/C/Users/gradle-2.10\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  export ANDROID_HOME=\\\"/C/Users/android-sdk-windows\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  export MAVEN_LOCAL_DIR=$ANDROID_HOME/extras/android/m2repository\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  export PATH=$PATH:$JAVA_HOME/bin:$GRADLE_HOME/bin:$ANDROID_HOME/tools:$ANDROID_HOME/platforms\\n                </code>\\n              </div>\\n              \\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Working with fork and upstream\\n              </strong>\\n            </p>\\n            <ul>\\n              <li>\\n                Check upstream branch\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git remote -v\\n                </code>\\n              </div>\\n            </div>\\n            <ul>\\n              <li>\\n                Add upstream branch into fork\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git remote add upstream https://github.com/test/test-demo.git\\n                </code>\\n              </div>\\n            </div>\\n            <ul>\\n              <li>\\n                Get upstream branh into fork, which is not present in fork.\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git fetch upstream\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git checkout &lt;UPSTREAM_BRANCH_NAME&gt;\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push origin <&lt;PSTREAM_BRANCH_NAME&gt; // It will add branch in fork repository\\n                </code>\\n              </div>\\n            </div> \\n            <ul>\\n              <li>\\n                Reset local changes in fork repository branch with upstream branch\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git reset --hard upstream/&lt;BRANCH_NAME&gt;\\n                </code>\\n              </div>\\n            </div>\\n            <ul>\\n              <li>\\n                pull changes from upstream branch to fork repo branch\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git pull upstram &lt;branch_name&gt;  // Fix confilicts if you get any.\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git add .\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git commit -m \\\"&lt;COMMENTS&gt;\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push origin &lt;BRANCH_NAME&gt;\\n                </code>\\n              </div>\\n            </div>\\n              <ul>\\n              <li>\\n                To merge upstream changes into fork branch / syncing a fork\\n\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git fetch upstream\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git diff upstream/&lt;BRANCH_NAME&gt; origin/&lt;BRANCH_NAME&gt;\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git merge upstream/&lt;BRANCH_NAME&gt;  // Fix confilicts if you get any.\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git status\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git add .\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git status\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git commit -m \\\"&lt;COMMENTS&gt;\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push origin &lt;BRANCH_NAME&gt;\\n                </code>\\n              </div>\\n            </div>\\n            <ul>\\n              <li>\\n                To abort rebase skip or continue\\n              </li>\\n            </ul>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git rebase --continue\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git rebase --skip\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git rebase --abort // it move to dev_0.1 from (dev_0.1|REBASE 2/3) \\n                </code>\\n              </div>\\n            </div>\\n\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Revert changes in git branch\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  git log\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git revert --no-commit 5fde377..HEAD // 5fde377 commit number\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git commit -m \\\"Revert changes\\\"\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  git push\\n                </code>\\n              </div>\\n              \\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/git/git.component.html\n// module id = 854\n// module chunks = 2"],"sourceRoot":""}