{"version":3,"sources":["webpack:///1.b161e51b41fa78736f65.chunk.js","webpack:///./src/app/linux/linux.module.ts","webpack:///./src/app/linux/linux.component.ts","webpack:///./src/app/linux/linux.routing.ts","webpack:///./src/app/linux/linux.component.scss","webpack:///./src/app/linux/linux.component.html"],"names":["webpackJsonp","838","module","exports","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__angular_common__","__WEBPACK_IMPORTED_MODULE_2__linux_routing__","__WEBPACK_IMPORTED_MODULE_3__linux_component__","__WEBPACK_IMPORTED_MODULE_4__angular_material__","__WEBPACK_IMPORTED_MODULE_5__shared_shared_module__","d","LinuxModule","__decorate","this","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","imports","forRoot","declarations","842","__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__","LinuxComponent","titleService","setTitle","prototype","ngOnInit","selector","template","styles","_a","845","__WEBPACK_IMPORTED_MODULE_0__linux_component__","__WEBPACK_IMPORTED_MODULE_1__angular_router__","LinuxRoutes","routes","path","component","forChild","849","853"],"mappings":"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","file":"1.b161e51b41fa78736f65.chunk.js","sourcesContent":["webpackJsonp([1,6],{\n\n/***/ 838:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__linux_routing__ = __webpack_require__(845);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__linux_component__ = __webpack_require__(842);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_material__ = __webpack_require__(285);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__shared_shared_module__ = __webpack_require__(480);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"LinuxModule\", function() { return LinuxModule; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\nvar LinuxModule = (function () {\n    function LinuxModule() {\n    }\n    LinuxModule = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"u\" /* NgModule */])({\n            imports: [\n                __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"b\" /* CommonModule */],\n                __WEBPACK_IMPORTED_MODULE_2__linux_routing__[\"a\" /* LinuxRoutes */],\n                __WEBPACK_IMPORTED_MODULE_5__shared_shared_module__[\"a\" /* SharedModule */],\n                __WEBPACK_IMPORTED_MODULE_4__angular_material__[\"MaterialModule\"].forRoot()\n            ],\n            declarations: [__WEBPACK_IMPORTED_MODULE_3__linux_component__[\"a\" /* LinuxComponent */]]\n        }), \n        __metadata('design:paramtypes', [])\n    ], LinuxModule);\n    return LinuxModule;\n}());\n//# sourceMappingURL=/Users/prashantkoshta/development/blog-dev-command/src/linux.module.js.map\n\n/***/ },\n\n/***/ 842:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__ = __webpack_require__(44);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return LinuxComponent; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar LinuxComponent = (function () {\n    function LinuxComponent(titleService) {\n        this.titleService = titleService;\n        this.titleService.setTitle(\"Linux\");\n    }\n    LinuxComponent.prototype.ngOnInit = function () {\n    };\n    LinuxComponent = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"P\" /* Component */])({\n            selector: 'app-linux',\n            template: __webpack_require__(853),\n            styles: [__webpack_require__(849)]\n        }), \n        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"a\" /* Title */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"a\" /* Title */]) === 'function' && _a) || Object])\n    ], LinuxComponent);\n    return LinuxComponent;\n    var _a;\n}());\n//# sourceMappingURL=/Users/prashantkoshta/development/blog-dev-command/src/linux.component.js.map\n\n/***/ },\n\n/***/ 845:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__linux_component__ = __webpack_require__(842);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__(286);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return LinuxRoutes; });\n\n\nvar routes = [\n    { path: '', component: __WEBPACK_IMPORTED_MODULE_0__linux_component__[\"a\" /* LinuxComponent */] }\n];\nvar LinuxRoutes = __WEBPACK_IMPORTED_MODULE_1__angular_router__[\"a\" /* RouterModule */].forChild(routes);\n//# sourceMappingURL=/Users/prashantkoshta/development/blog-dev-command/src/linux.routing.js.map\n\n/***/ },\n\n/***/ 849:\n/***/ function(module, exports) {\n\nmodule.exports = \".box{margin-left:auto;margin-right:auto;width:80%}.sub-heading{font-size:18px;color:#333}.codebg{background-color:#f7f7f7;margin:0;padding:18px;font-size:14px}.wordbg{background-color:#f7f7f7;padding:8px}code{font-size:16px}\\n\"\n\n/***/ },\n\n/***/ 853:\n/***/ function(module, exports) {\n\nmodule.exports = \"<div class=\\\"box\\\">\\n  <md-card>\\n    <md-card-title>Linux Commands</md-card-title>   \\n    <md-card-content>\\n          <p>Set of commands with short and sweet way. To keep handy.</p>\\n    </md-card-content>\\n  </md-card>\\n  <!-- Start Google Adsense -->\\n   <md-card>\\n      <md-card-content>\\n          <app-gadsense></app-gadsense>\\n      </md-card-content>\\n  </md-card>\\n  <!-- End Google Adsense -->\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\"><strong>\\n              To See environemnt variable\\n              </strong></p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  printenv\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 echo $path\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n      \\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\"><strong>Set envirnment variable</strong></p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                export JAVA_HOME=/c/java\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                export path=$path:$JAVA_HOME/bin\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n               Find file\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  find ./&lt;DIR_NAME&gt; -name '*.ext'\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                    Present working directory\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  pwd\\n                </code>\\n              </div>\\n              \\n              </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Change directory\\n              </strong>\\n            </p>\\n            \\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  cd ./home\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  cd ~ \\\\\\\\ to root directoy\\n                </code>\\n              </div>\\n            </div>\\n\\n      </md-card-content>\\n  </md-card>\\n\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                ls command - List directory contents\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  ls\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  ls -lrash\\n                </code>\\n              </div>\\n            </div>\\n            <p>\\n              Some useful options are -l, -a, -s, -h and -R where</p>\\n            <ul>\\n              <li>\\n                -l will give you a long listing (as explained above) \\n              </li>\\n              <li>\\n                -a will show you ALL the files in the directory, including hidden files\\n              </li>\\n              <li>\\n                -R will the subdirectories recursively, which means it will show all the directories and files within the specified directory.\\n              </li>\\n              <li>\\n                -s will also show you the size of the files (in blocks, not bytes) \\n              </li>\\n              <li>\\n                -h will show the size in \\\"human readable format\\\" (ie: 4K, 16M, 1G etc). Of course you must use this option in conjunction with the -s option.\\n\\n              </li>\\n            </ul>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n               Help Manual\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  man mv\\n                </code>\\n              </div>\\n              \\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n               Remove Directoy and file\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  rm -rf ./temp\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                grep command\\n              </strong>\\n            </p>\\n            <p>\\n              The grep command is used to search text or searches the given file for lines containing a match to the given strings or words.\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  grep 'word' file1 file2 file3\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 grpe -r 'Hello World' ./dir_name  //  read all files under each directory for search 'Hello World'\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Common\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                 celar // Clear terminal\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 echo \\\"Test1\\\" //echo message on scrren\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  mkdir //Create new folder(s)\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 ps //process status\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 rmdir //remove directory\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 rm //remove files\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 whoami // Print the current user id and name (`id -un')\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 who //Print all usernames currently logged in\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 man //help manual\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 mv ./soruce ./target Move or rename files or directories\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 mount //Mount a file system\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 kill  // to kill process by PID\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                vi Editor\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                 vi file.txt  //Open file in vi editor\\n                </code>\\n              </div>\\n            </div>\\n            <p>\\n              Help on vi editor\\n            </p>\\n            <ul>\\n              <li>\\n                i insert text before cursor, until hit\\n              </li>\\n              <li>\\n                I insert text at beginning of current line, until hit\\n              </li>\\n              <li>\\n                ^f for forward screen\\n              </li>\\n              <li>\\n                ^b for backward screen\\n              </li>\\n              <li>\\n                Esc+ :wq for save and quit\\n              </li>\\n              <li>\\n                Esc+ :q! for quit without save.\\n              </li>\\n            </ul>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n               Create or Extract tar file\\n              </strong>\\n            </p>\\n            <p>\\n              Create\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                 tar -cvf tarfilename.tar /path/to/directory  // Crate tar of give driectory\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 tar -cvf tarfilename.tar /path/to/file-1 /path/to/file-2 //To create an archive of certfain files\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 tar -cvf tarfilename.tar /path/to/directory --exclude=\\\"*.png\\\" //To exclude certian file from tar.\\n                </code>\\n              </div>\\n            </div>\\n            <p>\\n              Extract\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                 tar -xvf tar_file.tar\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 tar -xvf tar_file.tar\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 tar -xvf tar_file.tar bin // Extract a single directory called bin,\\n                </code>\\n              </div>\\n            </div>\\n            <p>\\n              To see file and directory in tar without extract\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                tar -tf tar_filename.tar\\n                </code>\\n              </div>\\n            </div>\\n\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                chmod command - To change permission\\n              </strong>\\n            </p>\\n            <p>\\n              chmod u=rwx,g=rx,o=r myfile -Where, The letters u, g, and o stand for \\\"user\\\", \\\"group\\\", and \\\"other\\\" and the letters \\\"r\\\", \\\"w\\\", and \\\"x\\\" stand for \\\"read\\\", \\\"write\\\", and \\\"execute\\\".\\n            </p>\\n            <p>\\n              Each digit is a combination of the numbers 4, 2, 1 and 0.\\n            </p>\\n            <ul>\\n              <li>\\n                4 stands for \\\"read\\\"\\n              </li>\\n              <li>\\n                2 stands for \\\"write\\\"\\n              </li>\\n              <li>\\n                1 stands for \\\"execute\\\"\\n              </li>\\n              <li>\\n                0 stands for \\\"no permission.\\\"\\n              </li>\\n      \\n            </ul>\\n            <p>\\n              So 750 mean U- (4+2+1) rwx, G- (0+4+1) rx, O-(0+0+0) NO permission\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                 chmod 755 ./temp \\n                </code>\\n              </div>\\n              \\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n \\n\\n\\n</div>\\n\"\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 1.b161e51b41fa78736f65.chunk.js","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {LinuxRoutes} from './linux.routing'\nimport { LinuxComponent } from './linux.component';\nimport {MaterialModule} from '@angular/material';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LinuxRoutes,\n    SharedModule,\n    MaterialModule.forRoot()\n  ],\n  declarations: [LinuxComponent]\n})\nexport class LinuxModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/linux/linux.module.ts","import { Component, OnInit } from '@angular/core';\nimport {Title} from '@angular/platform-browser'\n\n@Component({\n  selector: 'app-linux',\n  templateUrl: './linux.component.html',\n  styleUrls: ['./linux.component.scss']\n})\nexport class LinuxComponent implements OnInit {\n\n  constructor(private titleService: Title) { \n    this.titleService.setTitle( \"Linux\" );\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/linux/linux.component.ts","import { ModuleWithProviders } from '@angular/core';\nimport {LinuxComponent} from \"./linux.component\";\nimport { RouterModule,Routes } from '@angular/router';\n\nconst routes: Routes = [\n      { path: '', component: LinuxComponent }\n];\nexport const LinuxRoutes:ModuleWithProviders = RouterModule.forChild(routes);\n\n\n// WEBPACK FOOTER //\n// ./src/app/linux/linux.routing.ts","module.exports = \".box{margin-left:auto;margin-right:auto;width:80%}.sub-heading{font-size:18px;color:#333}.codebg{background-color:#f7f7f7;margin:0;padding:18px;font-size:14px}.wordbg{background-color:#f7f7f7;padding:8px}code{font-size:16px}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/linux/linux.component.scss\n// module id = 849\n// module chunks = 1","module.exports = \"<div class=\\\"box\\\">\\n  <md-card>\\n    <md-card-title>Linux Commands</md-card-title>   \\n    <md-card-content>\\n          <p>Set of commands with short and sweet way. To keep handy.</p>\\n    </md-card-content>\\n  </md-card>\\n  <!-- Start Google Adsense -->\\n   <md-card>\\n      <md-card-content>\\n          <app-gadsense></app-gadsense>\\n      </md-card-content>\\n  </md-card>\\n  <!-- End Google Adsense -->\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\"><strong>\\n              To See environemnt variable\\n              </strong></p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  printenv\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 echo $path\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n      \\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\"><strong>Set envirnment variable</strong></p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                export JAVA_HOME=/c/java\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                export path=$path:$JAVA_HOME/bin\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n               Find file\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  find ./&lt;DIR_NAME&gt; -name '*.ext'\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                    Present working directory\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  pwd\\n                </code>\\n              </div>\\n              \\n              </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Change directory\\n              </strong>\\n            </p>\\n            \\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  cd ./home\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  cd ~ \\\\\\\\ to root directoy\\n                </code>\\n              </div>\\n            </div>\\n\\n      </md-card-content>\\n  </md-card>\\n\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                ls command - List directory contents\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  ls\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  ls -lrash\\n                </code>\\n              </div>\\n            </div>\\n            <p>\\n              Some useful options are -l, -a, -s, -h and -R where</p>\\n            <ul>\\n              <li>\\n                -l will give you a long listing (as explained above) \\n              </li>\\n              <li>\\n                -a will show you ALL the files in the directory, including hidden files\\n              </li>\\n              <li>\\n                -R will the subdirectories recursively, which means it will show all the directories and files within the specified directory.\\n              </li>\\n              <li>\\n                -s will also show you the size of the files (in blocks, not bytes) \\n              </li>\\n              <li>\\n                -h will show the size in \\\"human readable format\\\" (ie: 4K, 16M, 1G etc). Of course you must use this option in conjunction with the -s option.\\n\\n              </li>\\n            </ul>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n               Help Manual\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  man mv\\n                </code>\\n              </div>\\n              \\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n               Remove Directoy and file\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  rm -rf ./temp\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                grep command\\n              </strong>\\n            </p>\\n            <p>\\n              The grep command is used to search text or searches the given file for lines containing a match to the given strings or words.\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                  grep 'word' file1 file2 file3\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 grpe -r 'Hello World' ./dir_name  //  read all files under each directory for search 'Hello World'\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                Common\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                 celar // Clear terminal\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 echo \\\"Test1\\\" //echo message on scrren\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                  mkdir //Create new folder(s)\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 ps //process status\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 rmdir //remove directory\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 rm //remove files\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 whoami // Print the current user id and name (`id -un')\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 who //Print all usernames currently logged in\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 man //help manual\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 mv ./soruce ./target Move or rename files or directories\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 mount //Mount a file system\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 kill  // to kill process by PID\\n                </code>\\n              </div>\\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                vi Editor\\n              </strong>\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                 vi file.txt  //Open file in vi editor\\n                </code>\\n              </div>\\n            </div>\\n            <p>\\n              Help on vi editor\\n            </p>\\n            <ul>\\n              <li>\\n                i insert text before cursor, until hit\\n              </li>\\n              <li>\\n                I insert text at beginning of current line, until hit\\n              </li>\\n              <li>\\n                ^f for forward screen\\n              </li>\\n              <li>\\n                ^b for backward screen\\n              </li>\\n              <li>\\n                Esc+ :wq for save and quit\\n              </li>\\n              <li>\\n                Esc+ :q! for quit without save.\\n              </li>\\n            </ul>\\n      </md-card-content>\\n  </md-card>\\n\\n\\n  <md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n               Create or Extract tar file\\n              </strong>\\n            </p>\\n            <p>\\n              Create\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                 tar -cvf tarfilename.tar /path/to/directory  // Crate tar of give driectory\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 tar -cvf tarfilename.tar /path/to/file-1 /path/to/file-2 //To create an archive of certfain files\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 tar -cvf tarfilename.tar /path/to/directory --exclude=\\\"*.png\\\" //To exclude certian file from tar.\\n                </code>\\n              </div>\\n            </div>\\n            <p>\\n              Extract\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                 tar -xvf tar_file.tar\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 tar -xvf tar_file.tar\\n                </code>\\n              </div>\\n              <div>\\n                <code>\\n                 tar -xvf tar_file.tar bin // Extract a single directory called bin,\\n                </code>\\n              </div>\\n            </div>\\n            <p>\\n              To see file and directory in tar without extract\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                tar -tf tar_filename.tar\\n                </code>\\n              </div>\\n            </div>\\n\\n      </md-card-content>\\n  </md-card>\\n\\n\\n<md-card>\\n      <md-card-content>\\n            <p class=\\\"sub-heading\\\">\\n              <strong>\\n                chmod command - To change permission\\n              </strong>\\n            </p>\\n            <p>\\n              chmod u=rwx,g=rx,o=r myfile -Where, The letters u, g, and o stand for \\\"user\\\", \\\"group\\\", and \\\"other\\\" and the letters \\\"r\\\", \\\"w\\\", and \\\"x\\\" stand for \\\"read\\\", \\\"write\\\", and \\\"execute\\\".\\n            </p>\\n            <p>\\n              Each digit is a combination of the numbers 4, 2, 1 and 0.\\n            </p>\\n            <ul>\\n              <li>\\n                4 stands for \\\"read\\\"\\n              </li>\\n              <li>\\n                2 stands for \\\"write\\\"\\n              </li>\\n              <li>\\n                1 stands for \\\"execute\\\"\\n              </li>\\n              <li>\\n                0 stands for \\\"no permission.\\\"\\n              </li>\\n      \\n            </ul>\\n            <p>\\n              So 750 mean U- (4+2+1) rwx, G- (0+4+1) rx, O-(0+0+0) NO permission\\n            </p>\\n            <div class=\\\"codebg\\\">\\n              <div>\\n                <code>\\n                 chmod 755 ./temp \\n                </code>\\n              </div>\\n              \\n            </div>\\n      </md-card-content>\\n  </md-card>\\n\\n \\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/linux/linux.component.html\n// module id = 853\n// module chunks = 1"],"sourceRoot":""}